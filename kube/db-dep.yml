apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-pod
  template:
    metadata:
      labels:
        app: db-pod
    spec:
      initContainers:
        - name: download-healthchecks
          image: alpine:3.14
          command:
            - sh
            - -c
            - |
              apk add --no-cache git && \
              git clone https://gitlab.imt-atlantique.fr/login-nuage/healthchecks/ /healthchecks/
          volumeMounts:
            - name: repo-volume
              mountPath: /healthchecks/
      containers:
        - name: db-pod
          image: postgres:15-alpine
          env:
            - name:  'POSTGRES_USER'
              value: 'postgres'
            - name:  'POSTGRES_PASSWORD'
              value: 'postgres'
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: data-volume
              mountPath: /var/lib/postgresql/data
            - name: repo-volume
              mountPath: /healthchecks/
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
#            exec:
 #             command:
  #              - sh
   #             - /healthchecks/postgres.sh
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: db-data-pvc
        - name: repo-volume
          emptyDir: { }